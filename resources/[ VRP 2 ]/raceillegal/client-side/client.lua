-----------------------------------------------------------------------------------------------------------------------------------------
-- VRP
-----------------------------------------------------------------------------------------------------------------------------------------
local Tunnel = module("vrp","lib/Tunnel")
local Proxy = module("vrp","lib/Proxy")
vRP = Proxy.getInterface("vRP")
-----------------------------------------------------------------------------------------------------------------------------------------
-- CONNECTION
-----------------------------------------------------------------------------------------------------------------------------------------
cRP = {}
Tunnel.bindInterface("raceillegal",cRP)
vSERVER = Tunnel.getInterface("raceillegal")
-----------------------------------------------------------------------------------------------------------------------------------------
-- VARIABLES
-----------------------------------------------------------------------------------------------------------------------------------------
local inRunners = false
local inSelected = 0
local inCheckpoint = 0
local inLaps = 1
local inTimers = 0
local raceTime2 = 0
local raceTimers = 0
local Points = 0
-----------------------------------------------------------------------------------------------------------------------------------------
-- VARIABLES
-----------------------------------------------------------------------------------------------------------------------------------------
local runners = {
	[1] = {
		["laps"] = 1,
		["raceTimers"] = 320,
		["init"] = { -329.21,-1096.17,23.03 },
		["coords"] = {
			{ -53.76,-1008.67,29.03,338.92 },
			{ 168.77,-1029.44,29.38,258.82	},
			{ 273.51,-912.85,29.04,343.17 },
			{ 551.07,-853.48,40.85,270.18 },
			{ 1044.05,-845.71,48.7,270.46 },
			{ 1178.46,-565.8,64.45,357.47 },
			{ 1231.07,-535.84,67.64,245.88 },
			{ 1262.88,-400.67,69.07,35.238 },
			{ 1080.35,-222.73,69.48,66.38 },
			{ 985.0,-255.34,67.98,138.61 },
			{ 878.76,-229.52,69.54,53.23 },
			{ 662.15,-97.25,74.5,56.63 },
			{ 673.69,-21.45,83.55,351.58 },
			{ 473.17,10.28,87.1,103.96 },
			{ 321.38,-98.91,68.78,100.2 },
			{ 159.41,-40.24,67.97,69.89 },
			{ 30.01,-282.29,47.76,154.13 },
			{ -81.71,-590.32,36.32,154.22 },
			{ -13.1,-686.61,32.34,268.98 },
			{ 57.87,-625.7,31.67,291.05 },
			{ 188.95,-596.24,29.6,250.36 },
			{ 460.89,-678.87,27.56,268.65 },
			{ 499.75,-1084.31,28.97,186.11 },
			{ 374.59,-1156.84,29.8,116.63 },
			{ 280.54,-1182.46,38.24,93.39 },
			{ -301.05,-1184.68,36.4,162.54 },
			{ -377.16,-625.94,37.25,357.53 },
			{ 412.19,-528.35,35.8,263.52 },
			{ 879.6,-760.13,41.04,206.22 },
			{ 963.04,-835.11,44.94,274.64 },
			{ 935.95,-909.83,40.66,86.24 },
			{ 860.32,-887.92,25.53,89.38 }
		}
	},	
	[2] = {
		["laps"] = 1,
		["raceTimers"] = 320,
		["init"] = { 843.99,-1985.63,29.31 },
		["coords"] = {
			{ 824.74,-1856.29,29.34 },
			{ 557.19,-1701.54,29.35 },			
			{ 68.18,-1280.93,29.3 },			
			{ 53.13,-1056.74,29.47 },			
			{ 23.35,-1081.09,38.16 },			
			{ 50.03,-1276.63,29.35 },			
			{ 95.89,-1458.94,29.35 },			
			{ 239.15,-1642.24,29.34 },			
			{ 234.73,-1719.03,29.08 },			
			{ 77.12,-1882.63,22.78 },			
			{ -72.48,-1791.36,28.03 },			
			{ -6.2,-1701.15,29.34 },			
			{ 233.84,-1837.05,26.74 },			
			{ 315.19,-1981.73,22.77 },			
			{ 335.15,-2168.71,14.24 },			
			{ 332.12,-2460.8,6.22 },			
			{ 191.51,-2548.54,5.93 },			
			{ -115.16,-2437.65,6.01 },		
			{ -201.55,-2668.47,6.01 }
		}
	},
	[3] = {
        ["laps"] = 1,
        ["raceTimers"] = 320,
        ["init"] = { 136.03,-2820.08,6.01 },
        ["coords"] = {
			{ 110.64,-2998.16,6.0 },
			{ 143.94,-3092.38,5.9},
			{ 194.55,-2854.18,10.01 },
			{ 286.98,-2669.56,18.49 },
			{ 759.73,-2642.92,52.34 },
			{ 1208.61,-2550.49,37.62 },
			{ 1275.58,-2115.26,46.51 },
			{ 1044.31,-2076.24,31.52 },
			{ 1007.03,-2170.14,30.56 },
			{ 986.51,-2246.67,30.56 },
			{ 924.2,-2159.29,30.32 },
			{ 956.28,-1762.76,31.29 },
			{ 970.24,-1634.56,30.11 },
			{ 903.34,-1432.59,30.94 },
			{ 802.38,-1312.19,26.26 },
			{ 776.24,-1177.42,28.45 },
			{ 664.28,-1171.13,14.56 },
			{ 638.49,-930.02,16.57 },
			{ 712.64,-844.12,24.22 },
			{ 780.76,-532.64,34.18 },
			{ 612.78,-368.25,43.63 },
			{ 417.54,-376.32,47.0 },
			{ 280.29,-523.63,43.29 },
			{ 187.24,-721.19,34.23 },
			{ 155.43,-694.61,33.13 }
       }
    },
	[4] = {
        ["laps"] = 1,
        ["raceTimers"] = 320,
        ["init"] = { 698.73,-1555.81,9.71 },
        ["coords"] = {
			{ 620.15,-1240.33,9.85 },
			{ 760.72,-1174.78,26.29 },
			{ 828.87,-1553.74,29.77 },
			{ 893.32,-1656.47,30.19 },
			{ 1036.68,-1713.36,34.16 },
			{ 1013.35,-1855.29,30.89 },
			{ 1155.27,-1849.81,37.27 },
			{ 1371.79,-1770.37,63.74 },
			{ 1373.14,-1656.36,55.42 },
			{ 1171.96,-1704.98,35.28 },
			{ 673.48,-1727.96,29.35 },
			{ 431.14,-1597.29,29.35 },
			{ 299.31,-1518.63,29.32 },
			{ 86.05,-1487.3,29.27 },
			{ 94.67,-1403.11,29.17 },
			{ 69.4,-1223.77,29.33 },
			{ 79.33,-1070.41,29.41 },
			{ 37.28,-955.82,29.29 },
			{ 84.64,-831.89,31.02 },
			{ 227.77,-687.31,36.75 },
			{ 270.47,-368.46,44.99 },
			{ 214.59,-281.55,48.87 },
			{ 229.86,-60.56,69.4 },
			{ 123.16,30.78,72.54 },
			{ 65.95,118.08,79.16 }
		}
	},
	[5] = {
        ["laps"] = 1,
        ["raceTimers"] = 320,
        ["init"] = { -352.54,-691.86,32.56 },
        ["coords"] = {
			{ -306.87,-634.13,33.26 },
			{ -213.89,-633.91,33.3 },
			{ -136.52,-662.84,34.3 },
			{ 10.99,-684.42,32.34 },
			{ 64.04,-623.17,31.72 },
			{ 219.98,-608.57,28.94 },
			{ 406.56,-587.03,28.74 },
			{ 622.94,-317.62,37.4 },
			{ 569.15,-391.92,25.39 },
			{ 458.98,-515.6,28.32 },
			{ 299.64,-818.75,29.35 },
			{ 230.16,-1002.08,29.47 },
			{ 152.9,-1015.66,29.4 },
			{ 151.67,-892.52,30.43 },
			{ 267.46,-584.36,43.3 },
			{ 413.0,-393.3,46.96 },
			{ 512.34,-386.39,44.67 },
			{ 564.46,-586.92,44.11 },
			{ 566.11,-776.43,11.34 },
			{ 631.52,-1167.78,11.08 },
			{ 761.95,-1176.54,26.45 },
			{ 794.34,-1284.53,26.37 },
			{ 745.6,-1347.04,26.31 }
		}
	},
	[6] = {
        ["laps"] = 1,
        ["raceTimers"] = 400,
        ["init"] = { 1657.69,3236.9,40.57 },
        ["coords"] = {
			{ 1779.83,3242.48,42.31 },
			{ 2287.8,2996.97,46.37 },
			{ 2290.85,2857.29,42.03 },
			{ 1980.83,2504.94,54.6 },
			{ 1885.59,2059.52,55.17 },
			{ 2074.98,1419.4,75.61 },
			{ 2467.56,880.25,91.17 },
			{ 2557.04,324.26,108.46 },
			{ 2532.14,168.46,103.13 },
			{ 2419.61,-197.03,86.9 },
			{ 2061.83,-623.26,95.47 },
			{ 1333.91,-1091.53,51.91 },
			{ 1076.7,-1032.79,35.91 },
			{ 972.69,-862.83,32.42 },
			{ 709.57,-572.07,36.16 },
			{ 581.8,-416.41,43.51 },
			{ 426.61,-289.66,50.54 },
			{ 258.56,-575.44,43.33 },
			{ 227.87,-842.06,30.23 },
			{ 280.34,-938.65,29.26 },
			{ 439.32,-955.42,29.04 },
			{ 499.71,-1027.26,28.21 },
			{ 443.09,-1068.77,29.22 },
			{ 544.65,-1036.36,37.43 },
			{ 706.77,-1015.67,31.7 },
			{ 710.41,-1073.92,22.34 }
		}
	},
	[7] = {
        ["laps"] = 1,
        ["raceTimers"] = 400,
        ["init"] = { 36.08,-605.51,31.63 },
        ["coords"] = {
			{ 27.28,-663.42,31.63 },
			{ -109.35,-667.34,35.5 },
			{ -330.47,-684.99,33.03 },
			{ -278.94,-766.43,53.99 },
			{ -276.87,-823.08,31.79 },
			{ -88.1,-933.46,29.33 }, 
			{ 159.59,-1023.36,29.39 },
			{ 244.91,-982.81,29.35 },
			{ 278.1,-900.31,28.99 },
			{ 368.39,-860.52,29.35 },
			{ 479.89,-841.22,25.73 },
			{ 501.95,-1080.88,28.92 },
			{ 376.08,-1156.0,29.3 },
			{ 229.93,-1183.74,38.26 },
			{ -339.83,-1202.89,40.38 },
			{ -448.58,-1277.04,44.85 },
			{ -452.79,-1388.7,30.45 },
			{ -414.96,-1560.45,10.47 },
			{ -330.88,-1703.58,1.41 },
			{ -61.02,-1885.2,9.61 },
			{ 79.1,-2000.08,17.85 },
			{ 150.27,-2060.84,18.33 },
			{ 215.84,-2158.97,14.11 },
			{ 218.63,-2459.45,6.79 },
			{ 255.56,-2660.25,6.02 },
			{ 260.4,-2838.41,6.0 }
		}
	}
}
-----------------------------------------------------------------------------------------------------------------------------------------
-- THREADRUNNERS
-----------------------------------------------------------------------------------------------------------------------------------------
Citizen.CreateThread(function()
	while true do
		local timeDistance = 500
		local ped = PlayerPedId()

		if IsPedInAnyVehicle(ped) then
			local coords = GetEntityCoords(ped)

			if inRunners then
				timeDistance = 4				
				dwText("~y~CHECKPOINTS:~w~ "..inCheckpoint.." / "..#runners[inSelected]["coords"]..", ~y~TOTAL DE VOLTAS:~w~ "..inLaps.." / "..runners[inSelected]["laps"]..", ~y~TEMPO RESTANTE:~w~ "..raceTime.." / "..runners[inSelected]["raceTimers"],4,0.5,0.905,0.45,255,255,255,100)

				local distance = #(coords - vector3(runners[inSelected]["coords"][inCheckpoint][1],runners[inSelected]["coords"][inCheckpoint][2],runners[inSelected]["coords"][inCheckpoint][3]))
				if distance <= 200 then
					DrawMarker(1,runners[inSelected]["coords"][inCheckpoint][1],runners[inSelected]["coords"][inCheckpoint][2],runners[inSelected]["coords"][inCheckpoint][3]-3,0,0,0,0,0,0,12.0,12.0,8.0,255,255,255,25,0,0,0,0)
					DrawMarker(21,runners[inSelected]["coords"][inCheckpoint][1],runners[inSelected]["coords"][inCheckpoint][2],runners[inSelected]["coords"][inCheckpoint][3]+1,0,0,0,0,180.0,130.0,3.0,3.0,2.0,42,137,255,50,1,0,0,1)

					if distance <= 10 then
						if inCheckpoint >= #runners[inSelected]["coords"] then
							if inLaps >= runners[inSelected]["laps"] then
								PlaySoundFrontend(-1,"RACE_PLACED","HUD_AWARDS",false)
								raceTime = 0
								teste = false
								local minutos
								local segundos
								minutos = (inTimers-(inTimers%60))/60
								segundos = inTimers%60
								if minutos < 10 then
    								minutos = "0" .. tostring(minutos)
								end
								if segundos < 10 then
									segundos = "0" .. tostring(segundos)
								end
								inTimers = string.sub(minutos,1,2) .. ":" .. segundos
								vSERVER.finishRaces()
								vSERVER.finishRacesDatabase(inSelected,inTimers)
								Points = 0
								cleanBlips()
								inRunners = false
								SendNuiMessage({  show = false })
							else
								inCheckpoint = 1
								inLaps = inLaps + 1
								makeBlips()
							end
						else
							inCheckpoint = inCheckpoint + 1
							makeBlips()
						end
					end
				end
			else
				for k,v in pairs(runners) do
					local distance = #(coords - vector3(v["init"][1],v["init"][2],v["init"][3]))
					if distance <= 50 then
						timeDistance = 4
						DrawMarker(23,v["init"][1],v["init"][2],v["init"][3] - 0.36,0.0,0.0,0.0,0.0,0.0,0.0,10.0,10.0,0.0,42,137,255,100,0,0,0,0)

						if IsControlJustPressed(1,38) and distance <= 5 and vSERVER.checkwantedcorrida() then
							if vSERVER.checkConsume() then
								inSelected = parseInt(k)
								Points = GetGameTimer()
								teste = true
								inRunners = true
								inCheckpoint = 1
								inTimers = 0
								inLaps = 1
								raceTime = parseInt(runners[inSelected]["raceTimers"])
								TriggerEvent("Notify","amarelo","Autoridades foram notificadas.",3000)
								makeBlips()
								SendNuiMessage({  show = true })
							end
						end
					end
				end
			end
		end

		Citizen.Wait(timeDistance)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- THREADTIMERS
-----------------------------------------------------------------------------------------------------------------------------------------
Citizen.CreateThread(function()
	while true do
		local timeDistance = 1000
		if inRunners then
			if teste then
				inTimers = inTimers + 1
			end
		end

		Citizen.Wait(timeDistance)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- THREADRACETIME
-----------------------------------------------------------------------------------------------------------------------------------------
Citizen.CreateThread(function()
	while true do
		if inRunners then
			if raceTime > 0 then
				raceTime = raceTime - 1

				if (raceTime <= 0 or not IsPedInAnyVehicle(PlayerPedId())) then
					raceTime = 0
					Points = 0
					cleanBlips()
					inRunners = false
					teste = false
					TriggerServerEvent("raceillegal:explosivePlayers")
					Wait(5000)
					AddExplosion(GetEntityCoords(GetPlayersLastVehicle()),2,1.0,true,true,true)
				end
			end
		end

		Citizen.Wait(1000)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- makeBlips
-----------------------------------------------------------------------------------------------------------------------------------------
function makeBlips()
	if DoesBlipExist(CheckBlip) then
		RemoveBlip(CheckBlip)
		CheckBlip = nil
	end

	CheckBlip = AddBlipForCoord(runners[inSelected]["coords"][inCheckpoint][1],runners[inSelected]["coords"][inCheckpoint][2],runners[inSelected]["coords"][inCheckpoint][3])
	SetBlipSprite(CheckBlip,12)
	SetBlipAsShortRange(CheckBlip,true)
	SetBlipScale(CheckBlip,0.9)
	SetBlipColour(CheckBlip,3)
	SetBlipRoute(CheckBlip,true)
	BeginTextCommandSetBlipName("STRING")
	AddTextComponentString("Checkpoint")
	EndTextCommandSetBlipName(CheckBlip)
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- CLEANBLIPS
-----------------------------------------------------------------------------------------------------------------------------------------
function cleanBlips()
	if DoesBlipExist(CheckBlip) then
		RemoveBlip(CheckBlip)
		CheckBlip = nil
	end
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- DWTEXT
-----------------------------------------------------------------------------------------------------------------------------------------
function dwText(text,font,x,y,scale,r,g,b,a)
	SetTextFont(font)
	SetTextScale(scale,scale)
	SetTextColour(r,g,b,a)
	SetTextOutline()
	SetTextCentre(1)
	SetTextEntry("STRING")
	AddTextComponentString(text)
	DrawText(x,y)
end

-----------------------------------------------------------------------------------------------------------------------------------------
-- DEFUSE
-----------------------------------------------------------------------------------------------------------------------------------------
